---
import { ArticleCard } from "@/components/parts/card/ArticleCard"
import { DividerHorizontal } from "@/components/parts/common/DividerHorizontal"
import { Link } from "@/components/parts/common/Link"
import { Pagination } from "@/components/templates/Pagination"
import styles from "@/components/views/ArticleListView.module.css"
import { ErrorView } from "@/components/views/ErrorView"
import { DEVELOPMENT_ARTICLE_URL_ID } from "@/constants/env"
import { isValidArray } from "@/utils"

import type { CalculatedArticle } from "@/types/api"
import type { ComponentProps } from "react"

/** Props */
type Props = {
  /** 記事情報リスト */
  articleInfoList: Array<CalculatedArticle>
} & ComponentProps<typeof Pagination>

const { articleInfoList, ...paginationProps } = Astro.props

const developmentArticleExcludedArticleInfoList = import.meta.env.PROD
  ? articleInfoList.filter(articleInfo => articleInfo.articleUrlId !== DEVELOPMENT_ARTICLE_URL_ID)
  : articleInfoList
---

{
  isValidArray(developmentArticleExcludedArticleInfoList) || !("keyword" in paginationProps) ? (
    <div class={styles.articleList}>
      <div class={styles.list}>
        {developmentArticleExcludedArticleInfoList.map((articleInfo, index) => (
          <>
            <Link href={`/${articleInfo.articleUrlId}`}>
              <article>
                {/* ArticleInfoBarの中でSWRでAPIを叩く必要があるのでclientディレクティブを付与している */}
                <ArticleCard client:load isThumbnailEager={index < 3} {...articleInfo} />
              </article>
            </Link>

            {index !== developmentArticleExcludedArticleInfoList.length - 1 && (
              <DividerHorizontal />
            )}
          </>
        ))}
      </div>

      {paginationProps.totalPageCount >= 2 && (
        <div class={styles.pagination}>
          <Pagination client:visible {...paginationProps} />
        </div>
      )}
    </div>
  ) : (
    <ErrorView
      japaneseMessage={`「${paginationProps.keyword}」${"\n"}に関連する記事は存在しません`}
    />
  )
}
