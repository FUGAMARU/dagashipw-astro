---
import { Markdown } from "astro-remote"

import ImageRow from "@/components/article/originals/image/ImageRow"
import H2 from "@/components/article/standards/heading/H2"
import H3 from "@/components/article/standards/heading/H3"
import Image from "@/components/article/standards/Image"
import Paragraph from "@/components/article/standards/Paragraph"
import Layout from "@/components/layout/Layout.astro"
import Hero from "@/components/templates/hero/Hero"
import styles from "@/pages/_[articleUrlId].module.css"
import { getAllArticleUrlIds, getArticle } from "@/services/api"
import { generateHeroPropsFromArticleInfo } from "@/utils/generateHeroPropsFromArticleInfo"
import { getCurrentDateTime } from "@/utils/getCurrentDateTime"
import { isDefined } from "@/utils/isDefined"

import type { GetStaticPaths } from "astro"

/**
 * 存在する記事のパス一覧をexportする
 * @returns GetStaticPaths
 */
export const getStaticPaths: GetStaticPaths = async () => {
  const allArticleUrlIds = await getAllArticleUrlIds()

  return allArticleUrlIds.map(articleUrlId => ({
    params: {
      articleUrlId
    }
  }))
}

const { articleUrlId } = Astro.params

if (typeof articleUrlId !== "string") {
  throw new Error("記事のURL IDが不正です")
}

const article = await getArticle(articleUrlId)

if (!isDefined(article)) {
  throw new Error("記事情報が存在しません")
}

const heroProps = generateHeroPropsFromArticleInfo(article)
---

<Layout title={`${article?.title} | 麩菓子の雑記帳`}>
  <div class={styles.articlePageMain}>
    <div class={styles.heroSp}>
      <Hero device="sp" {...heroProps} />
    </div>

    <div class={styles.heroPc}>
      <Hero device="pc" {...heroProps} />
    </div>

    <div class={styles.body}>
      <Markdown
        components={{
          h2: H2,
          h3: H3,
          p: Paragraph,
          img: Image,
          ImageRow
        }}
        content={article?.body}
        sanitize={{
          allowComponents: true
        }}
      />

      <p class={styles.built}>{`この記事は ${getCurrentDateTime()} にビルドされました`}</p>
    </div>
    {/* TODO: コメントエリア */}
  </div>
</Layout>
