---
import { Markdown } from "astro-remote"

import ImageRow from "@/components/article/originals/image/ImageRow"
import H2 from "@/components/article/standards/heading/H2"
import Image from "@/components/article/standards/Image"
import Paragraph from "@/components/article/standards/Paragraph"
import Layout from "@/components/layout/Layout.astro"
import Hero from "@/components/templates/hero/Hero"
import styles from "@/pages/_[articleUrlId].module.css"
import { getAllArticleUrlIds, getArticle } from "@/services/api"
import { isDefined } from "@/utils/isDefined"

import type { GetStaticPaths } from "astro"

/**
 * 存在する記事のパス一覧をexportする
 * @returns GetStaticPaths
 */
export const getStaticPaths: GetStaticPaths = async () => {
  const allArticleUrlIds = await getAllArticleUrlIds()

  return allArticleUrlIds.map(({ articleUrlId }) => ({
    params: {
      articleUrlId
    }
  }))
}

const { params: articleUrlIdParams } = Astro
const allArticleUrlIds = await getAllArticleUrlIds()

// articleUrlIdParamsからidを逆引き
const articleId = allArticleUrlIds.find(
  ({ articleUrlId }) => articleUrlId === articleUrlIdParams.articleUrlId
)?.articleId

if (!isDefined(articleId)) {
  throw new Error("存在しないarticleUrlIdのブログ記事を読み込もうとしました")
}

const article = await getArticle(articleId)
---

<Layout title={`${article?.title} | 麩菓子の雑記帳`}>
  <div class={styles.articlePageMain}>
    <div class={styles.heroSp}>
      <Hero
        backNumber={1}
        commentCount={1}
        createdAt="2021/01/01"
        device="sp"
        tags={["タグ1", "タグ2"]}
        thumbnailUrl="https://animeanime.jp/imgs/zoom/177259.jpg"
        title="はがないの聖地「長良公園」に行ってきた！"
        updatedAt="2021/01/02"
      />
    </div>

    <div class={styles.heroPc}>
      <Hero
        backNumber={1}
        commentCount={1}
        createdAt="2021/01/01"
        device="pc"
        tags={["タグ1", "タグ2"]}
        thumbnailUrl="https://animeanime.jp/imgs/zoom/177259.jpg"
        title="はがないの聖地「長良公園」に行ってきた！"
        updatedAt="2021/01/02"
      />
    </div>

    <div class={styles.body}>
      <Markdown
        components={{
          h2: H2,
          p: Paragraph,
          img: Image,
          ImageRow
        }}
        content={article?.body}
        sanitize={{
          allowComponents: true
        }}
      />

      <p class={styles.built}>この記事は 2024/04/29 13:35:41 にビルドされました</p>
    </div>
    {/* TODO: コメントエリア */}
  </div>
</Layout>
